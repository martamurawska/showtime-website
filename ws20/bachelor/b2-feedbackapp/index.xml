<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Feedback App on IMI Showtime</title>
    <link>https://martamurawska.github.io/showtime-website/ws20/bachelor/b2-feedbackapp/</link>
    <description>Recent content in Feedback App on IMI Showtime</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>de-de</language><atom:link href="https://martamurawska.github.io/showtime-website/ws20/bachelor/b2-feedbackapp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Features</title>
      <link>https://martamurawska.github.io/showtime-website/ws20/bachelor/b2-feedbackapp/features/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://martamurawska.github.io/showtime-website/ws20/bachelor/b2-feedbackapp/features/</guid>
      <description>Feedback The main purpose of our application is to get good and constructive feedback to enhance meetings in an agile work environment. A look at the questionnaire Fast and easy To get people to respond on a daily basis this process has to be quick and easy. Therefore we focussed on getting the best possible assessments with only a few clicks. Automation Since our app is connected to the Outlook API, the invitation links for the questionnaires get sent out automatically 5 minutes after the meeting to the meeting attendees.</description>
    </item>
    
    <item>
      <title>Process</title>
      <link>https://martamurawska.github.io/showtime-website/ws20/bachelor/b2-feedbackapp/process/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://martamurawska.github.io/showtime-website/ws20/bachelor/b2-feedbackapp/process/</guid>
      <description>How did we start The first step in our creation process was to identify the needs of Brandung and analyze the market. To our surprise we couldn&amp;rsquo;t find any product that was focusing on meetings the same way we do. We began thinking about our own experiences with meetings or even classes and what kind of tool could have been useful to evaluate them. We came up with a bunch of fancy features but narrowed it down to a core functionality at the end for our MVP:</description>
    </item>
    
    <item>
      <title>Tech Stack</title>
      <link>https://martamurawska.github.io/showtime-website/ws20/bachelor/b2-feedbackapp/tech-stack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://martamurawska.github.io/showtime-website/ws20/bachelor/b2-feedbackapp/tech-stack/</guid>
      <description>Our tech stack Next.js/React The base for app was Next.js and the React library.
Some of the components we used:
axios dotenv express mongoose node-cron nodemon styled-components MongoDB MongoDB serves as our database. We save the feedback in a database and read from it for the evaluation. Azure To access the calendars and user data, we connected our app to Azure / the Microsoft Outlook API. Heroku Heroku was used to deploy both the app and our demo.</description>
    </item>
    
    <item>
      <title>Future</title>
      <link>https://martamurawska.github.io/showtime-website/ws20/bachelor/b2-feedbackapp/future/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://martamurawska.github.io/showtime-website/ws20/bachelor/b2-feedbackapp/future/</guid>
      <description>Progress over time ‚è± Evaluation timeline Meeting owners already get their respective evaluations for hosted meetings. But, wouldn&amp;rsquo;t it be great to see if the received feedback has led to an overall improvement of the meeting quality? We thought of implementing a view for meeting owners, where they can see their meeting performance over time. The idea was to show a graph or a timeline for a week, month or a specified period.</description>
    </item>
    
  </channel>
</rss>
